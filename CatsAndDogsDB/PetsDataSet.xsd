<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PetsDataSet" targetNamespace="http://tempuri.org/PetsDataSet.xsd" xmlns:mstns="http://tempuri.org/PetsDataSet.xsd" xmlns="http://tempuri.org/PetsDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="PetsConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="PetsConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.CatsAndDogsDB.Properties.Settings.GlobalReference.Default.PetsConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CarInGarageTableAdapter" GeneratorDataComponentClassName="CarInGarageTableAdapter" Name="CarInGarage" UserDataComponentName="CarInGarageTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PetsConnectionString (Settings)" DbObjectName="dbo.CarInGarage" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CarInGarage] WHERE (([Id] = @Original_Id) AND ([CarMarkId] = @Original_CarMarkId) AND ([CaModelName] = @Original_CaModelName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CarMarkId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CarMarkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CaModelName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CaModelName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CarInGarage] ([CarMarkId], [CaModelName]) VALUES (@CarMarkId, @CaModelName);
SELECT Id, CarMarkId, CaModelName FROM CarInGarage WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CarMarkId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CarMarkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CaModelName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CaModelName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, CarMarkId, CaModelName FROM dbo.CarInGarage</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CarInGarage] SET [CarMarkId] = @CarMarkId, [CaModelName] = @CaModelName WHERE (([Id] = @Original_Id) AND ([CarMarkId] = @Original_CarMarkId) AND ([CaModelName] = @Original_CaModelName));
SELECT Id, CarMarkId, CaModelName FROM CarInGarage WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CarMarkId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CarMarkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CaModelName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CaModelName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CarMarkId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CarMarkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CaModelName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CaModelName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\USERS\OPILANE\SOURCE\REPOS\CATSANDDOGSDB\CATSANDDOGSDB\PETS.MDF].dbo.CarInGarage" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="CarMarkId" DataSetColumn="CarMarkId" />
              <Mapping SourceColumn="CaModelName" DataSetColumn="CaModelName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CarMarkTableAdapter" GeneratorDataComponentClassName="CarMarkTableAdapter" Name="CarMark" UserDataComponentName="CarMarkTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PetsConnectionString (Settings)" DbObjectName="dbo.CarMark" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CarMark] WHERE (([Id] = @Original_Id) AND ([CarMarkName] = @Original_CarMarkName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CarMarkName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CarMarkName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CarMark] ([CarMarkName]) VALUES (@CarMarkName);
SELECT Id, CarMarkName FROM CarMark WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CarMarkName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CarMarkName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, CarMarkName FROM dbo.CarMark</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CarMark] SET [CarMarkName] = @CarMarkName WHERE (([Id] = @Original_Id) AND ([CarMarkName] = @Original_CarMarkName));
SELECT Id, CarMarkName FROM CarMark WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CarMarkName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CarMarkName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CarMarkName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CarMarkName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\USERS\OPILANE\SOURCE\REPOS\CATSANDDOGSDB\CATSANDDOGSDB\PETS.MDF].dbo.CarMark" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="CarMarkName" DataSetColumn="CarMarkName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PetTableAdapter" GeneratorDataComponentClassName="PetTableAdapter" Name="Pet" UserDataComponentName="PetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PetsConnectionString (Settings)" DbObjectName="dbo.Pet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Pet] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([TypeId] = @Original_TypeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Pet] ([Name], [TypeId]) VALUES (@Name, @TypeId);
SELECT Id, Name, TypeId FROM Pet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, TypeId FROM dbo.Pet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Pet] SET [Name] = @Name, [TypeId] = @TypeId WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([TypeId] = @Original_TypeId));
SELECT Id, Name, TypeId FROM Pet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\USERS\OPILANE\SOURCE\REPOS\CATSANDDOGSDB\CATSANDDOGSDB\PETS.MDF].dbo.Pet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="TypeId" DataSetColumn="TypeId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PetTypeTableAdapter" GeneratorDataComponentClassName="PetTypeTableAdapter" Name="PetType" UserDataComponentName="PetTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PetsConnectionString (Settings)" DbObjectName="dbo.PetType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PetType] WHERE (([Id] = @Original_Id) AND ([PetTypeName] = @Original_PetTypeName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PetTypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PetTypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PetType] ([PetTypeName]) VALUES (@PetTypeName);
SELECT Id, PetTypeName FROM PetType WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PetTypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PetTypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, PetTypeName FROM dbo.PetType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PetType] SET [PetTypeName] = @PetTypeName WHERE (([Id] = @Original_Id) AND ([PetTypeName] = @Original_PetTypeName));
SELECT Id, PetTypeName FROM PetType WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PetTypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PetTypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PetTypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PetTypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\USERS\OPILANE\SOURCE\REPOS\CATSANDDOGSDB\CATSANDDOGSDB\PETS.MDF].dbo.PetType" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="PetTypeName" DataSetColumn="PetTypeName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PetTypeNameTableAdapter" GeneratorDataComponentClassName="PetTypeNameTableAdapter" Name="PetTypeName" UserDataComponentName="PetTypeNameTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PetsConnectionString (Settings)" DbObjectName="dbo.PetTypeName" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PetTypeName] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([TypeId] = @Original_TypeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PetTypeName] ([Name], [TypeId]) VALUES (@Name, @TypeId);
SELECT Id, Name, TypeId FROM PetTypeName WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, TypeId FROM dbo.PetTypeName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PetTypeName] SET [Name] = @Name, [TypeId] = @TypeId WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([TypeId] = @Original_TypeId));
SELECT Id, Name, TypeId FROM PetTypeName WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\USERS\OPILANE\SOURCE\REPOS\CATSANDDOGSDB\CATSANDDOGSDB\PETS.MDF].dbo.PetTypeName" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="TypeId" DataSetColumn="TypeId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PetsDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="PetsDataSet" msprop:Generator_UserDSName="PetsDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="CarInGarage" msprop:Generator_TableClassName="CarInGarageDataTable" msprop:Generator_TableVarName="tableCarInGarage" msprop:Generator_TablePropName="CarInGarage" msprop:Generator_RowDeletingName="CarInGarageRowDeleting" msprop:Generator_RowChangingName="CarInGarageRowChanging" msprop:Generator_RowEvHandlerName="CarInGarageRowChangeEventHandler" msprop:Generator_RowDeletedName="CarInGarageRowDeleted" msprop:Generator_UserTableName="CarInGarage" msprop:Generator_RowChangedName="CarInGarageRowChanged" msprop:Generator_RowEvArgName="CarInGarageRowChangeEvent" msprop:Generator_RowClassName="CarInGarageRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="CarMarkId" msprop:Generator_ColumnVarNameInTable="columnCarMarkId" msprop:Generator_ColumnPropNameInRow="CarMarkId" msprop:Generator_ColumnPropNameInTable="CarMarkIdColumn" msprop:Generator_UserColumnName="CarMarkId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CaModelName" msprop:Generator_ColumnVarNameInTable="columnCaModelName" msprop:Generator_ColumnPropNameInRow="CaModelName" msprop:Generator_ColumnPropNameInTable="CaModelNameColumn" msprop:Generator_UserColumnName="CaModelName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CarMark" msprop:Generator_TableClassName="CarMarkDataTable" msprop:Generator_TableVarName="tableCarMark" msprop:Generator_TablePropName="CarMark" msprop:Generator_RowDeletingName="CarMarkRowDeleting" msprop:Generator_RowChangingName="CarMarkRowChanging" msprop:Generator_RowEvHandlerName="CarMarkRowChangeEventHandler" msprop:Generator_RowDeletedName="CarMarkRowDeleted" msprop:Generator_UserTableName="CarMark" msprop:Generator_RowChangedName="CarMarkRowChanged" msprop:Generator_RowEvArgName="CarMarkRowChangeEvent" msprop:Generator_RowClassName="CarMarkRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="CarMarkName" msprop:Generator_ColumnVarNameInTable="columnCarMarkName" msprop:Generator_ColumnPropNameInRow="CarMarkName" msprop:Generator_ColumnPropNameInTable="CarMarkNameColumn" msprop:Generator_UserColumnName="CarMarkName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Pet" msprop:Generator_TableClassName="PetDataTable" msprop:Generator_TableVarName="tablePet" msprop:Generator_TablePropName="Pet" msprop:Generator_RowDeletingName="PetRowDeleting" msprop:Generator_RowChangingName="PetRowChanging" msprop:Generator_RowEvHandlerName="PetRowChangeEventHandler" msprop:Generator_RowDeletedName="PetRowDeleted" msprop:Generator_UserTableName="Pet" msprop:Generator_RowChangedName="PetRowChanged" msprop:Generator_RowEvArgName="PetRowChangeEvent" msprop:Generator_RowClassName="PetRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TypeId" msprop:Generator_ColumnVarNameInTable="columnTypeId" msprop:Generator_ColumnPropNameInRow="TypeId" msprop:Generator_ColumnPropNameInTable="TypeIdColumn" msprop:Generator_UserColumnName="TypeId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PetType" msprop:Generator_TableClassName="PetTypeDataTable" msprop:Generator_TableVarName="tablePetType" msprop:Generator_TablePropName="PetType" msprop:Generator_RowDeletingName="PetTypeRowDeleting" msprop:Generator_RowChangingName="PetTypeRowChanging" msprop:Generator_RowEvHandlerName="PetTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="PetTypeRowDeleted" msprop:Generator_UserTableName="PetType" msprop:Generator_RowChangedName="PetTypeRowChanged" msprop:Generator_RowEvArgName="PetTypeRowChangeEvent" msprop:Generator_RowClassName="PetTypeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="PetTypeName" msprop:Generator_ColumnVarNameInTable="columnPetTypeName" msprop:Generator_ColumnPropNameInRow="PetTypeName" msprop:Generator_ColumnPropNameInTable="PetTypeNameColumn" msprop:Generator_UserColumnName="PetTypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PetTypeName" msprop:Generator_TableClassName="PetTypeNameDataTable" msprop:Generator_TableVarName="tablePetTypeName" msprop:Generator_TablePropName="PetTypeName" msprop:Generator_RowDeletingName="PetTypeNameRowDeleting" msprop:Generator_RowChangingName="PetTypeNameRowChanging" msprop:Generator_RowEvHandlerName="PetTypeNameRowChangeEventHandler" msprop:Generator_RowDeletedName="PetTypeNameRowDeleted" msprop:Generator_UserTableName="PetTypeName" msprop:Generator_RowChangedName="PetTypeNameRowChanged" msprop:Generator_RowEvArgName="PetTypeNameRowChangeEvent" msprop:Generator_RowClassName="PetTypeNameRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TypeId" msprop:Generator_ColumnVarNameInTable="columnTypeId" msprop:Generator_ColumnPropNameInRow="TypeId" msprop:Generator_ColumnPropNameInTable="TypeIdColumn" msprop:Generator_UserColumnName="TypeId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CarInGarage" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="CarMark_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CarMark" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Pet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Pet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="PetType_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PetType" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="PetTypeName_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PetTypeName" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="TypeIdFK" msdata:parent="PetType" msdata:child="PetTypeName" msdata:parentkey="Id" msdata:childkey="TypeId" msprop:Generator_UserChildTable="PetTypeName" msprop:Generator_ChildPropName="GetPetTypeNameRows" msprop:Generator_UserRelationName="TypeIdFK" msprop:Generator_ParentPropName="PetTypeRow" msprop:Generator_RelationVarName="relationTypeIdFK" msprop:Generator_UserParentTable="PetType" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>